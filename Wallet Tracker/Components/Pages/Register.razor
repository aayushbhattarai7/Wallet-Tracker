@page "/register"
@using Wallet_Tracker.Components.Layout
@using Wallet_Tracker.Models
@layout FirstLayout
@inject UserService UserService
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh; background: linear-gradient(135deg, #4caf50, #66bb6a);">
    <div class="border rounded p-4" style="width: 380px; background-color: #ffffffcc; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);">
        <h3 class="text-center mb-4 text-success" style="font-weight: bold; letter-spacing: 1px;">Register</h3>

        <div class="mb-3">
            <label for="username" class="form-label text-secondary" style="font-size: 0.9rem;">Username</label>
            <input id="username" class="form-control rounded-pill px-3" @bind="RegisterUsername" placeholder="Enter your username" style="background-color: #f1f8e9; border-color: #c8e6c9;" />
        </div>

        <div class="mb-3">
            <label for="password" class="form-label text-secondary" style="font-size: 0.9rem;">Password</label>
            <input id="password" class="form-control rounded-pill px-3" @bind="RegisterPassword" placeholder="Enter your password" type="password" style="background-color: #f1f8e9; border-color: #c8e6c9;" />
        </div>

        <div class="mb-3">
            <label for="email" class="form-label text-secondary" style="font-size: 0.9rem;">Email</label>
            <input id="email" class="form-control rounded-pill px-3" @bind="RegisterEmail" placeholder="Enter your email" type="email" style="background-color: #f1f8e9; border-color: #c8e6c9;" />
        </div>

        <div class="mb-3">
            <label for="currency" class="form-label text-secondary" style="font-size: 0.9rem;">Currency</label>
            <select id="currency" class="form-control rounded-pill px-3" @bind="currency" style="background-color: #f1f8e9; border-color: #c8e6c9;">
                <option value="" disabled selected hidden>Select your currency</option>
                <option value="NPR">NPR</option>
                <option value="USD">USD</option>
            </select>
        </div>

        <div class="d-grid">
            <button class="btn btn-success rounded-pill" @onclick="RegisterPage" style="font-weight: 600;">Register</button>
        </div>

        <div class="text-center mt-3">
            <a href="/" class="text-success text-decoration-underline" style="font-size: 0.9rem;">Already have an account? Login</a>
        </div>

        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="alert @((Message.Contains("successful") ? "alert-success" : "alert-danger")) mt-3" role="alert" style="font-size: 0.9rem;">
                @Message
            </div>
        }
    </div>
</div>

@code {
    private string RegisterUsername = "";
    private string RegisterPassword = "";
    private string RegisterEmail = "";
    private string currency = "";
    private string Message = "";

    private List<User> Users = new();

    protected override void OnInitialized()
    {
        Users = UserService.LoadUsers();
    }

    private void RegisterPage()
    {
        if (string.IsNullOrWhiteSpace(RegisterUsername) || string.IsNullOrWhiteSpace(RegisterPassword))
        {
            Message = "Username and password are required.";
            return;
        }

        if (Users.Any(u => u.Username == RegisterUsername))
        {
            Message = "Username already exists.";
            return;
        }

        var newUser = new User
            {
                Username = RegisterUsername,
                Password = UserService.HashPassword(RegisterPassword),
                Email = RegisterEmail,
                Currency = currency
            };

        Users.Add(newUser);
        UserService.SaveUsers(Users);

        Message = "Registration successful. Redirecting to login...";
        Task.Delay(2000).ContinueWith(_ => NavigationManager.NavigateTo("/"));
    }
}
